(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{66:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return s})),a.d(t,"rightToc",(function(){return c})),a.d(t,"default",(function(){return l}));var n=a(2),r=a(6),o=(a(0),a(89)),i={title:"Monitoring"},s={unversionedId:"apps/monitoring",id:"apps/monitoring",isDocsHomePage:!1,title:"Monitoring",description:"Observability is a critical piece of any production infrastructure. Konstellation comes configured with Kube dashboard, Prometheus (prometheus-operator), Grafana, AlertManager, as well as a set of dashboards for the apps that are deploy.",source:"@site/docs/apps/monitoring.mdx",permalink:"/docs/apps/monitoring",editUrl:"https://github.com/k11n/konstellation/edit/master/website/docs/apps/monitoring.mdx",sidebar:"default",previous:{title:"Microservices",permalink:"/docs/apps/services"},next:{title:"Cluster Creation",permalink:"/docs/clusters/creation"}},c=[{value:"Launching tools",id:"launching-tools",children:[]},{value:"Kubernetes dashboard",id:"kubernetes-dashboard",children:[]},{value:"Monitoring with Grafana",id:"monitoring-with-grafana",children:[{value:"App overview",id:"app-overview",children:[]},{value:"Istio mesh",id:"istio-mesh",children:[]},{value:"Adding new dashboards",id:"adding-new-dashboards",children:[]}]},{value:"Prometheus",id:"prometheus",children:[{value:"Collecting app metrics",id:"collecting-app-metrics",children:[]}]}],p={rightToc:c};function l(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Observability is a critical piece of any production infrastructure. Konstellation comes configured with Kube dashboard, Prometheus (",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/coreos/prometheus-operator"}),"prometheus-operator"),"), Grafana, AlertManager, as well as a set of dashboards for the apps that are deploy."),Object(o.b)("p",null,"You can also use the same Prometheus instance to collect additional metrics about your apps."),Object(o.b)("h2",{id:"launching-tools"},"Launching tools"),Object(o.b)("p",null,"Monitoring and observability tools run within your cluster, and are inaccessible to the internet. Konstellation makes it easy to get to these tools with the ",Object(o.b)("inlineCode",{parentName:"p"},"launch")," command. It opens up a ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://kubernetes.io/docs/concepts/cluster-administration/proxies/#proxies"}),"secure proxy")," to services within the cluster."),Object(o.b)("h2",{id:"kubernetes-dashboard"},"Kubernetes dashboard"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"kon launch kubedash")," starts the Kubernetes Dashboard. Because the dashboard gives you full control over the cluster, authentication is required. Konstellation generates a secret token for each cluster, and the launch command displays prints it out so you can copy and paste to authenticate."),Object(o.b)("p",null,Object(o.b)("img",Object(n.a)({parentName:"p"},{src:"/img/screen/kubedash.png",alt:"Kubernetes Dashboard"}))),Object(o.b)("h2",{id:"monitoring-with-grafana"},"Monitoring with Grafana"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"kon launch grafana")," will launch a browser to the Grafana instance. You'll find a series of dashboard pre-configured for your cluster. We'll highlight a couple of them that you should check out."),Object(o.b)("h3",{id:"app-overview"},"App overview"),Object(o.b)("p",null,Object(o.b)("img",Object(n.a)({parentName:"p"},{src:"/img/screen/grafana-app-overview.png",alt:"App Overview Screenshot"}))),Object(o.b)("p",null,"This dashboard is a quick way of getting the key metrics about apps, including releases and pods, throughput and success rate, as well as CPU and memory utilization."),Object(o.b)("h3",{id:"istio-mesh"},"Istio mesh"),Object(o.b)("p",null,Object(o.b)("img",Object(n.a)({parentName:"p"},{src:"/img/screen/grafana-istio-mesh.png",alt:"Istio Mesh Screenshot"}))),Object(o.b)("p",null,"An overview of the health of the service mesh. It's useful when it comes to diagnosing the current flow of traffic."),Object(o.b)("h3",{id:"adding-new-dashboards"},"Adding new dashboards"),Object(o.b)("p",null,"Konstellation uses ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/integr8ly/grafana-operator"}),"Grafana Operator"),", and you can define additional dashboards via the CRD ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/integr8ly/grafana-operator/blob/master/documentation/dashboards.md"}),"GrafanaDashboard"),". Once created, it'll be applied to Grafana automatically."),Object(o.b)("h2",{id:"prometheus"},"Prometheus"),Object(o.b)("p",null,"The pre-configured Prometheus install runs redundant with two instances. Metric data is stored on an EBS volume attached to each instance (set up as a persistent volume). Launch Prometheus web UI with ",Object(o.b)("inlineCode",{parentName:"p"},"kon launch prometheus"),"."),Object(o.b)("p",null,"This Prometheus install is configured to collect metrics for the cluster and Istio mesh, including data that it could observe about apps."),Object(o.b)("h3",{id:"collecting-app-metrics"},"Collecting app metrics"),Object(o.b)("p",null,"The default setup could provide basic metrics observable from outside of apps, but to measure app-specific metrics, you need to integrate one of the Prometheus ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://prometheus.io/docs/instrumenting/clientlibs/"}),"client libraries")," and expose a metric endpoint on one of the ports. You can enable Prometheus scraping by setting the ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/manifest#prometheusspec"}),"prometheus")," field in the manifest."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml",metastring:'title="App.yaml"',title:'"App.yaml"'}),"apiVersion: k11n.dev/v1alpha1\nkind: App\nmetadata:\n  name: myapp\nspec:\n...\n  prometheus:\n    endpoints:\n    - port: http\n      interval: 15s  # s, m suffixes\n      # override path if you aren't able to surface metrics on the default /metrics path\n      # path: /metrics\n")),Object(o.b)("p",null,"Konstellation uses ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/coreos/prometheus-operator"}),"Prometheus Operator")," and will set up a ServiceMonitor for the app. The above setup will instruct Prometheus to scrape the ",Object(o.b)("inlineCode",{parentName:"p"},"http")," port every 10 seconds."))}l.isMDXComponent=!0},89:function(e,t,a){"use strict";a.d(t,"a",(function(){return u})),a.d(t,"b",(function(){return h}));var n=a(0),r=a.n(n);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=r.a.createContext({}),l=function(e){var t=r.a.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},u=function(e){var t=l(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(a),d=n,h=u["".concat(i,".").concat(d)]||u[d]||b[d]||o;return a?r.a.createElement(h,s(s({ref:t},p),{},{components:a})):r.a.createElement(h,s({ref:t},p))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var p=2;p<o;p++)i[p]=a[p];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);